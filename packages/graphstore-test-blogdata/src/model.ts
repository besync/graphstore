/* **********************************************************
 *               SYSTEM GENERATED FILE: DO NOT EDIT     
 * This file was system generated by firebase-schema-generator 
 * on Thu, 08 Nov 2018 12:28:57 GMT 
 * *********************************************************** */


import { Model, Submodel, Status, Store, primary, foreign, resolver, jsonfield, observable } from '@besync/graphstore';
export { toJS, push, IEnhancedObservableArray } from '@besync/graphstore';

export interface Time extends Date {};
export type int = number;


/* **************************
 * STORES
 * ************************** */
    
export class PostStore extends Store {
    static getbyId(id): Post { return Post.getDocument({id}, `posts/${id}`);}
    static path({id}): string { return `posts/${id}` }
}
export class UserStore extends Store {
    static getbyId(id): User { return User.getDocument({id}, `users/${id}`);}
    static getUserById(user_id): User { return User.getDocument({user_id}, `users/${user_id}`);}
    static path({id}): string { return `users/${id}` }
}

/* **************************
* ROOT MODELS
* ************************** */

export class Post extends Model 
{
    @resolver get user(): User { return UserStore.getUserById(this.user_id); };

    @primary @observable id: string;
    @observable @foreign user_id: string;
    @observable title: string;
    @observable body: string;

    protected static Store: typeof Store = PostStore;

    constructor (defaults: {id: string, [extra: string]: any }, ...args) { super(defaults, ...args); } 

}

export class User extends Model 
{

    @primary @observable id: string;
    @observable name: string;
    @observable username: string;
    @observable email: string;
    @observable @jsonfield address: User._Address;
    @observable website: string;
    @observable phone: string;
    @observable @jsonfield company: User._Company;

    protected static Store: typeof Store = UserStore;

    constructor (defaults: {id: string, [extra: string]: any }, ...args) { super(defaults, ...args); } 

}

export namespace User {
    export class _Address extends Submodel
    {
    @observable street?: string;
    @observable suite?: string;
    @observable city?: string;
    @observable zipcode?: string;
    }
}

export namespace User {
    export class _Company extends Submodel
    {
    @observable name?: string;
    @observable catchPhrase?: string;
    @observable bs?: string;
    }
}


/* **************************
 * USER-BASED MODELS
 * ************************** */
    

/* **************************
 * ORG-BASED MODELS
 * ************************** */
    
/* **************************
 * ENUMS
 * ************************** */
    
/* **************************
 * EXPORTS
 * ************************** */
    
export const stores = { PostStore, UserStore };
export interface Stores { PostStore: typeof PostStore, UserStore: typeof UserStore };
export const models = { Post, User };
